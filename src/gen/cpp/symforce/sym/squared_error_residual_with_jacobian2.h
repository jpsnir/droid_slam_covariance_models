// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

namespace sym {

/**
 * squared distance error for a single variable
 * linear regression problem
 * y = ax
 *
 * e = (y - a1*x))^2
 *     res_D_a: (1x1) jacobian of res (1) wrt arg a (1)
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 1, 1> SquaredErrorResidualWithJacobian2(
    const Scalar x, const Scalar y, const Scalar a,
    Eigen::Matrix<Scalar, 1, 1>* const res_D_a = nullptr) {
  // Total ops: 6

  // Input arrays

  // Intermediate terms (1)
  const Scalar _tmp0 = -a * x + y;

  // Output terms (2)
  Eigen::Matrix<Scalar, 1, 1> _res;

  _res(0, 0) = std::pow(_tmp0, Scalar(2));

  if (res_D_a != nullptr) {
    Eigen::Matrix<Scalar, 1, 1>& _res_D_a = (*res_D_a);

    _res_D_a(0, 0) = -2 * _tmp0 * x;
  }

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
