// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

namespace sym {

/**
 * squared distance error for a two input, two output
 * linear regression problem
 * Y = Ax
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 2, 1> Squared2DErrorResidual(const Eigen::Matrix<Scalar, 2, 1>& X,
                                                   const Eigen::Matrix<Scalar, 2, 1>& Y,
                                                   const Eigen::Matrix<Scalar, 2, 2>& A,
                                                   const Eigen::Matrix<Scalar, 2, 1>& B) {
  // Total ops: 12

  // Input arrays

  // Intermediate terms (0)

  // Output terms (1)
  Eigen::Matrix<Scalar, 2, 1> _res;

  _res(0, 0) =
      std::pow(Scalar(-A(0, 0) * X(0, 0) - A(0, 1) * X(1, 0) - B(0, 0) + Y(0, 0)), Scalar(2));
  _res(1, 0) =
      std::pow(Scalar(-A(1, 0) * X(0, 0) - A(1, 1) * X(1, 0) - B(1, 0) + Y(1, 0)), Scalar(2));

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
